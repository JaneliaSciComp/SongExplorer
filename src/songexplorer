#!/usr/bin/env python3

# launch the graphical user interface
 
# songexplorer <configuration-file> <port>
# http://<hostname>:<port>/gui

# e.g. songexplorer `pwd`/configuration.py 5006

import os
import sys
import tensorflow as tf
import psutil
from subprocess import run, PIPE, DEVNULL
import socket
import webbrowser
import platform
import shutil

from lib import get_srcrepobindirs

_, _, bindirs = get_srcrepobindirs()
os.environ['PATH'] = os.pathsep.join([*bindirs, *os.environ['PATH'].split(os.pathsep)])

_, configuration_file, port = sys.argv

sys.path.append(os.path.join(os.path.dirname(__file__), "src"))
from lib import check_config

use_aitch, server_username, server_ipaddr = check_config(configuration_file)

local_ncpu_cores = os.cpu_count()
local_ngpu_cards = len(tf.config.list_physical_devices("GPU"))
local_ngigabytes_memory = int(psutil.virtual_memory().total/1024/1024/1024)

print("detected "+str(local_ncpu_cores)+" local_ncpu_cores, "+
                  str(local_ngpu_cards)+" local_ngpu_cards, "+
                  str(local_ngigabytes_memory)+" local_ngigabytes_memory")

if server_ipaddr:
    p = run(["ssh", "-l", server_username, server_ipaddr, "$SONGEXPLORER_BIN",
             "python3 -c 'import os; print(os.cpu_count())'"], stdout=PIPE)
    server_ncpu_cores = int(p.stdout.decode('ascii').rstrip())
    p = run(["ssh", "-l", server_username, server_ipaddr, "$SONGEXPLORER_BIN",
             "python3 -c 'import tensorflow; print(len(tensorflow.config.list_physical_devices(\"GPU\")))'"],
            stdout=PIPE)
    server_ngpu_cards = int(p.stdout.decode('ascii').rstrip())
    p = run(["ssh", "-l", server_username, server_ipaddr, "$SONGEXPLORER_BIN",
             "python3 -c 'import psutil; print(int(psutil.virtual_memory().total/1024/1024/1024))'"],
            stdout=PIPE)
    server_ngigabytes_memory = int(p.stdout.decode('ascii').rstrip())

    print("detected "+str(server_ncpu_cores)+" server_ncpu_cores, "+
                      str(server_ngpu_cards)+" server_ngpu_cards, "+
                      str(server_ngigabytes_memory)+" server_ngigabytes_memory")

repodir = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
with open(os.path.join(repodir,"VERSION.txt"), 'r') as fid:
    version = fid.read().replace('\n', ' ')
print("SongExplorer version: "+version)
allow_websockets=["localhost:"+port]
ipaddr="noIPv4s"

try:
    thisip = socket.gethostbyname(socket.gethostname())
except:
    print('can not get host by name')
else:
    allow_websockets.append(thisip+":"+port)
    ipaddr=thisip

thisip = socket.gethostname()
allow_websockets.append(thisip+":"+port)
ipaddr=thisip

print(ipaddr+":"+port)


if use_aitch:
    p = run(["hnslots"], stdout=PIPE, stderr=DEVNULL)
    if p.returncode==1:
        run(["hstart",
              str(local_ncpu_cores)+','+str(local_ngpu_cards)+','+str(local_ngigabytes_memory)])
    else:
        nslots = [int(x) for x in p.stdout.decode('ascii').rstrip().split(',')]
        if nslots != [local_ncpu_cores, local_ngpu_cards, local_ngigabytes_memory]:
            print("WARNING: SongExplorer's scheduler is already running with local_ncpu_cores, local_ngpu_cards, and local_ngigabytes_memory set to "+str(nslots)+" respectively, which is different than what seems to be the specifications of this machine: "+str([local_ncpu_cores, local_ngpu_cards, local_ngigabytes_memory])+".  To use the latter instead, quit SongExplorer, execute `hstop`, and restart SongExplorer.")

    if server_ipaddr:
        p = run(["ssh", "-l", server_username, server_ipaddr,
                   "export SINGULARITYENV_PREPEND_PATH="+source_path+";",
                   "$SONGEXPLORER_BIN", "hnslots"], stdout=PIPE, stderr=DEVNULL)
        if p.returncode==1:
            run(["ssh", "-l", server_username, server_ipaddr,
                   "export SINGULARITYENV_PREPEND_PATH="+source_path+";",
                   "$SONGEXPLORER_BIN", "hstart",
                   str(server_ncpu_cores)+','+str(server_ngpu_cards)+','+str(server_ngigabytes_memory)])
        else:
            nslots = [int(x) for x in p.stdout.decode('ascii').rstrip().split(',')]
            if nslots != [server_ncpu_cores, server_ngpu_cards, server_ngigabytes_memory]:
                print("WARNING: SongExplorer's scheduler is already running with server_ncpu_cores, server_ngpu_cards, and server_ngigabytes_memory set to "+str(nslots)+" respectively, which is different than what seems to be the specifications of this machine: "+str([server_ncpu_cores, server_ngpu_cards, server_ngigabytes_memory])+".  To use the latter instead, quit SongExplorer, execute `ssh -l "+server_username+" "+server_ipaddr+" $SONGEXPLORER_BIN hstop`, and restart SongExplorer.")

try:
    try:
        defaultbrowser = webbrowser.get()
    except:
        defaultbrowser = None
    maybeshow = () if isinstance(defaultbrowser, webbrowser.GenericBrowser) else ("--show",)
    run([*(["bokeh"] if platform.system()=='Windows' else
                 ["python", shutil.which("bokeh")]),
         "serve",
         os.path.join(repodir, "src", "gui"),
         *[x for y in [["--allow-websocket-origin", x] for x in allow_websockets] for x in y],
         *maybeshow,
         "--port", port,
         "--args", version, configuration_file, str(use_aitch)])

except KeyboardInterrupt:
    if use_aitch:
        p = run(["hjobs"], stdout=PIPE, stderr=DEVNULL)
        if len(p.stdout.decode('ascii').splitlines()) - 1 > 0:
            print("WARNING: jobs are still queued locally; to kill them execute `hstop --force`; to stop SongExplorer's scheduler, wait until they are done and execute `hstop`")
        else:
            run(["hstop"])
        if server_ipaddr:
            p = run(["ssh", "-l", server_username, server_ipaddr,
                       "export SINGULARITYENV_PREPEND_PATH="+source_path+";",
                       "$SONGEXPLORER_BIN", "hjobs"], stdout=PIPE, stderr=DEVNULL)
            if len(p.stdout.decode('ascii').splitlines()) - 1 > 0:
                print("WARNING: jobs are still queued on the server; to kill them execute `ssh -l "+server_username+" "+server_ipaddr+" $SONGEXPLORER_BIN hstop --force`; to stop SongExplorer's scheduler, wait until they are done and execute `ssh -l "+server_username+" "+server_ipaddr+" $SONGEXPLORER_BIN $SONGEXPLORER_BIN hstop`")
            else:
                run(["ssh", "-l", server_username, server_ipaddr,
                       "export SINGULARITYENV_PREPEND_PATH="+source_path+";",
                       "$SONGEXPLORER_BIN", "hstop"])
